<?php
/**
 * WARNING: IF YOU MAKE ECC SPECIFIC CHANGES TO THIS FILE, THEY MUST ALSO BE ADDED TO THE RWD FILE TOO
 * rwd/default/template/epicor_comm/catalog/product/view.phtml
 */
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
/**
 * Product view template
 * 
 * @see Mage_Catalog_Block_Product_View
 * @see Mage_Review_Block_Product_View
 */

/* @var $reconfigureCart ClassName */
?>
<?php // echo 'gets to epicor comm catalog product view';  ?>
<?php $reconfigureCart = $this->getRequest()->getParam('recon'); ?>
<?php $_helper = $this->helper('catalog/output'); ?>
<?php
    $_product = $this->getProduct();

    // limit customer access to configurator button to correct licence
    $customer = Mage::getModel('customer/session')->getCustomer();
/* @var $customer Epicor_Comm_Model_Customer */
    
    if ($customer->isCustomer()) {
        $licenseTypes = array('Customer_Configurator');
    } else {
        $licenseTypes = array('Consumer_Configurator');
    }
    
    $helper = $this->helper('epicor_comm');
    /* @var $helper Epicor_Comm_Helper_Data */
    
    $showAddToCart = $helper->isFunctionalityDisabledForCustomer('cart') ? false : true;
    $this->setLicensed(Mage::helper('epicor_common/Data')->isLicensedFor($licenseTypes));
?>
<script type="text/javascript">
    var optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
</script>
<div id="messages_product_view"><?php echo $this->getMessagesBlock()->getGroupedHtml() ?></div>
<div class="product-view">
    <div class="product-essential">
        <form action="<?php echo $this->getSubmitUrl($_product) ?>" method="post" id="product_addtocart_form"<?php if ($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
            <div class="no-display">
                <input type="hidden" name="product" value="<?php echo $_product->getId() ?>" />
                <input type="hidden" name="related_product" id="related-products-field" value="" />
            </div>

            <div class="product-shop">
                <div class="product-name">
                    <h1><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></h1>
                </div>

                <?php if ($this->canEmailToFriend()): ?>
                    <p class="email-friend"><a href="<?php echo $this->helper('catalog/product')->getEmailToFriendUrl($_product) ?>"><?php echo $this->__('Email to a Friend') ?></a></p>
                <?php endif; ?>

                <?php echo $this->getReviewsSummaryHtml($_product, false, true) ?>
                <?php echo $this->getChildHtml('alert_urls') ?>
                <?php if($_product->isSaleable()): ?>                
                        <?php echo $this->getChildHtml('product_type_data') ?>
                        <?php echo $this->getTierPriceHtml() ?>
                <?php endif; ?>                
                <?php echo $this->getChildHtml('extrahint') ?>
                    <?php if (!$this->hasOptions() || $_product->getConfigurator()): ?>
                    <?php if ($showAddToCart) : ?>
                        <div class="add-to-box">
                            <?php if ($_product->isSaleable()): ?>
                                <?php if ($reconfigureCart): ?>
                                     <?php echo $this->getChildHtml('groupedupdatecart') ?> 
                                <?php else: ?>
                                    <?php if ($_product->getConfigurator()): ?>   
                                        <?php if ($this->getLicensed()): ?> 
                                            <?php echo $this->getChildHtml('configurableaddtocart') ?> 
                                        <?php endif; ?>                           
                                    <?php else : ?>
                                        <?php echo $this->getChildHtml('addtocart') ?>
                                    <?php endif; ?>  
                                <?php endif; ?>    
                                <?php if ($this->helper('wishlist')->isAllow() || $_compareUrl = $this->helper('catalog/product_compare')->getAddUrl($_product)): ?>
                                    
                                <?php endif; ?>
                                <?php echo $this->getChildHtml('addto') ?>
                            <?php else: ?>
                                <p class="availability out-of-stock"><span><?php echo $this->__('Product currently unavailable') ?></span></p>
                            <?php endif; ?>
                        </div>
                        <?php echo $this->getChildHtml('extra_buttons') ?>
                    <?php elseif ($_product->isSaleable()): ?>
                        <div class="add-to-box">
                        <?php echo $this->getChildHtml('addto') ?>
                        </div>
                    <?php endif; ?>
                <?php endif; ?>

                <div class="short-description">
                    <h2><?php echo $this->__('Quick Overview') ?></h2>
                    <strong><?php echo $this->__($_product->getSkuHeader()) ?></strong>
                    <ul>
                        <?php foreach ($_product->getSkus() as $sku): ?>
                            <li><?php echo $sku; ?></li>
                    <?php endforeach; ?>
                    </ul>
                    <?php if ($_product->getShortDescription()): ?>
                        <div class="std"><?php echo $_helper->productAttribute($_product, nl2br($_product->getShortDescription()), 'short_description') ?></div>
<?php endif; ?>
                </div>

                <?php echo $this->getChildHtml('other'); ?>

                <?php if (($_product->isSaleable() || $_product->getTypeId() == 'bundle') && $this->hasOptions() && !$_product->getConfigurator()): ?>
                    <?php echo $this->getChildChildHtml('container1', '', true, true) ?>
                <?php endif;?>

            </div>

            <div class="product-img-box">
<?php echo $this->getChildHtml('media') ?>
            </div>

            <div class="clearer"></div>
            <?php if ($_product->isSaleable() && $this->hasOptions() && !$_product->getConfigurator()): ?>
                <?php echo $this->getChildChildHtml('container2', '', true, true) ?>
<?php endif; ?>
        </form>
        <script type="text/javascript">
            //<![CDATA[
            var productAddToCartForm = new VarienForm('product_addtocart_form');
            productAddToCartForm.submit = function(button, url) {
                if (this.validator.validate()) {
                    var form = this.form;
                    var oldUrl = form.action;
                    if (url) {
                        form.action = url;
                    }
                    var e = null;
                    try {
                        this.form.submit();
                    } catch (e) {
                    }
                    this.form.action = oldUrl;
                    if (e) {
                        throw e;
                    }

                    if (button && button != 'undefined') {
                        button.disabled = true;
                    }
                }
            }.bind(productAddToCartForm);

            productAddToCartForm.submitLight = function(button, url) {
                if (this.validator) {
                    var nv = Validation.methods;
                    delete Validation.methods['required-entry'];
                    delete Validation.methods['validate-one-required'];
                    delete Validation.methods['validate-one-required-by-name'];
                    // Remove custom datetime validators
                    for (var methodName in Validation.methods) {
                        if (methodName.match(/^validate-datetime-.*/i)) {
                            delete Validation.methods[methodName];
                        }
                    }

                    if (this.validator.validate()) {
                        if (url) {
                            this.form.action = url;
                        }
                        this.form.submit();
                    }
                    Object.extend(Validation.methods, nv);
                }
            }.bind(productAddToCartForm);
            productAddToCartForm.configurable = function(button, url) {
                alert('gets to new add to cart bit');
            }.bind(productAddToCartForm);
            //]]>
        </script>
    </div>

    <div class="product-collateral">
            <?php foreach ($this->getChildGroup('detailed_info', 'getChildHtml') as $alias => $html): ?>
            <div class="box-collateral <?php echo "box-{$alias}" ?>">
                <?php if ($title = $this->getChildData($alias, 'title')): ?>
                    <h2><?php echo $this->escapeHtml($title); ?></h2>
                <?php endif; ?>
            <?php echo $html; ?>
            </div>
        <?php endforeach; ?>
        <?php echo $this->getChildHtml('upsell_products') ?>
<?php echo $this->getChildHtml('product_additional_data') ?>
    </div>
</div>
