<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
$helper = $this->helper('epicor_comm');
/* @var $helper Epicor_Comm_Helper_Data */
$showAddToCart = $helper->isFunctionalityDisabledForCustomer('cart') ? false : true;

$_product = $this->getProduct();
/* @var $_product Epicor_Comm_Model_Product */

$returnUrl = $this->getRequest()->getParam('returnurl');
$buttonTitle = $this->__('Add to Cart');

$locHelper = $this->helper('epicor_comm/locations');
/* @var $helper Epicor_Comm_Helper_Locations */

$showLocations = $locHelper->isLocationsEnabled();
$singleLocation = count($_product->getCustomerLocations()) == 1;
$stockVisibility = Mage::getStoreConfig('epicor_comm_locations/global/stockvisibility');
$allSourceLocations = ($stockVisibility == 'all_source_locations') ? true : false;
$decimalPlaces = Mage::helper('epicor_comm')->getDecimalPlaces($_product);

if ($showAddToCart && !$_product->getConfigurator() && ($_product->isSaleable() || $_product->getStockItem()->getBackorders())):
    ?>
    <div class="add-to-cart">
        <?php if (!$_product->isGrouped() && (
            !$showLocations || $allSourceLocations || (!$_product->isConfigurable() && $singleLocation) || (
                $_product->isConfigurable() && in_array($stockVisibility, array('default', 'logged_in_shopper_source', 'all_source_locations'))
            )
        )): ?>
            <label for="qty"><?php echo $this->__('Qty:') ?></label>
                    <input type="text" name="qty" id="qty" maxlength="12" value="<?php if (!$showLocations): echo $this->getProductDefaultQty() * 1;
        endif;
                ?>" title="<?php echo $this->__('Qty') ?>" class="input-text qty" decimal="<?php echo $decimalPlaces == '' ? 0 : $decimalPlaces; ?>" />
    <?php endif; ?>
        <?php if ($singleLocation): ?>
            <?php $locationCode = key($_product->getCustomerLocations());?>
            <input type="hidden" name="location_code" value="<?php echo $locationCode; ?>"/>
        <?php endif; ?>
        <?php if ($returnUrl): ?>
            <input type="hidden" name="return_url" value="<?php echo base64_decode($returnUrl); ?>" />
        <?php endif; ?>
        <button type="button" title="<?php echo $buttonTitle ?>" class="button btn-cart" onclick="productAddToCartForm.submit(this)"><span><span><?php echo $buttonTitle ?></span></span></button>
                    <?php echo $this->getChildHtml('', true, true) ?>
    </div>
<?php endif; ?>
<script type="text/javascript">
            document.getElementById('product_addtocart_form').onkeypress = function(e) {
                var key = e.charCode || e.keyCode || 0;
                if (key == 13) {
                   Event.observe('product_addtocart_form', 'submit', function (event) {
                        if (checkDecimal('product_addtocart_form', 1))
                        {
                            return true;
                        } else
                        {
                            Event.stop(event);
                        }
                    });
                }
           }
</script>